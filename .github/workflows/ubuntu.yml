name: Example Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: ''  # Leave empty to checkout the repository that triggered the workflow

          # The branch, tag or SHA to checkout. Defaults to the reference or SHA for the event
          ref: ''  # e.g., 'main', 'refs/tags/v1.0', 'abcdef1234567890'

          # Personal access token (PAT) used to fetch the repository.
          # Default: ${{ github.token }} which is automatically provided by GitHub Actions
          token: ''  # Use this if you need to use a custom PAT

          # SSH key used to fetch the repository. If using SSH, provide the SSH key here
          ssh-key: ''  # e.g., '-----BEGIN OPENSSH PRIVATE KEY----- ... -----END OPENSSH PRIVATE KEY-----'

          # Known hosts in addition to the user and global host key database
          # Default: github.com is already implicitly added
          ssh-known-hosts: ''  # e.g., 'github.com ssh-rsa AAAAB3...'

          # Whether to perform strict host key checking. Default: true
          ssh-strict: ''  # 'true' to enforce strict host key checking, 'false' to disable

          # The user to use when connecting to the remote SSH host. Default: git
          ssh-user: ''  # e.g., 'git'

          # Whether to configure the token or SSH key with the local git config. Default: true
          persist-credentials: ''  # 'true' to configure credentials, 'false' to not

          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: ''  # e.g., 'my-repo', 'subfolder/my-repo'

          # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching. Default: true
          clean: ''  # 'true' to perform a clean checkout, 'false' to skip

          # Partially clone against a given filter. Overrides sparse-checkout if set.
          filter: ''  # e.g., 'blob:none', 'tree:0'

          # Do a sparse checkout on given patterns. Each pattern should be separated with new lines.
          sparse-checkout: ''  # e.g., 'src/', 'docs/'

          # Specifies whether to use cone-mode when doing a sparse checkout. Default: true
          sparse-checkout-cone-mode: ''  # 'true' to enable cone-mode, 'false' to disable

          # Number of commits to fetch. 0 indicates all history for all branches and tags. Default: 1
          fetch-depth: ''  # e.g., '10' to fetch the last 10 commits

          # Whether to fetch tags, even if fetch-depth > 0. Default: false
          fetch-tags: ''  # 'true' to fetch tags

          # Whether to show progress status output when fetching. Default: true
          show-progress: ''  # 'true' to show progress, 'false' to hide

          # Whether to download Git-LFS files. Default: false
          lfs: ''  # 'true' to download Git-LFS files

          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.
          # Default: false
          submodules: ''  # 'true' to checkout submodules, 'recursive' for recursive submodule checkout

          # Add repository path as safe.directory for Git global config by running `git config --global --add safe.directory <path>`
          # Default: true
          set-safe-directory: ''  # 'true' to add the repository path as a safe directory, 'false' to skip

          # The base URL for the GitHub instance that you are trying to clone from
          # Example URLs: https://github.com or https://my-ghes-server.example.com
          github-server-url: ''  # Leave empty for the default GitHub instance

      # Add additional steps here to build, test, or deploy your project
